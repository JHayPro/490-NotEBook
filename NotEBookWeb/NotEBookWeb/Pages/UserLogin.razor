@layout CenteredCardLayout
@page "/login"
@using NotEBookWeb.Data
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage


<EditForm Model="@user" OnValidSubmit="@ValidateUser">
    <div id="username-div">
        <h3>Email</h3>
        <input type="text" placeholder="Email" @bind="user.Email" />
    </div>
    <div id="password-div">
        <h3>Password</h3>
        <input type="password" placeholder="Password" @bind="user.Password" />
    </div>

    <input type="submit" class="btn-primary rounded" value="Login" />
    <a href="/register"><button class="btn-primary rounded">Register</button></a>
</EditForm>


@code {

    private User user;

    protected override Task OnInitializedAsync()
    {
        user = new User();
        return base.OnInitializedAsync();
    }

    private async Task<bool> ValidateUser()
    {

        ((CustomAuthenticationStateProvider)AuthenticationStateProvider).FlagUserAsAuthenticated(user.Email); //mark user as authenticated when they log in
        NavigationManager.NavigateTo("/");

        await sessionStorage.SetItemAsync("Email", user.Email);

        return await Task.FromResult(true);
    }

}
