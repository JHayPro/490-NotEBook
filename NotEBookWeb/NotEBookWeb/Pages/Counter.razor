@page "/counter"
@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime

<h1>Calculator</h1>

<label class="ans-display">@answer</label>

<div class="calculator">
    <div class="buttons">
        <span>
            <button @ref=btn7 @onclick="@(()=>inputNum(@btn7))">7</button>
            <button @ref=btn8 @onclick="@(()=>inputNum(@btn8))">8</button>
            <button @ref=btn9 @onclick="@(()=>inputNum(@btn9))">9</button>
            <button>+</button>
        </span>
        <br />
        <span>
            <button @ref=btn4 @onclick="@(()=>inputNum(@btn4))">4</button>
            <button @ref=btn5 @onclick="@(()=>inputNum(@btn5))">5</button>
            <button @ref=btn6 @onclick="@(()=>inputNum(@btn6))">6</button>
            <button>-</button>
        </span>
        <br />
        <span>
            <button @ref=btn1 @onclick="@(()=>inputNum(@btn1))">1</button>
            <button @ref=btn2 @onclick="@(()=>inputNum(@btn2))">2</button>
            <button @ref=btn3 @onclick="@(()=>inputNum(@btn3))">3</button>
            <button>x</button>
        </span>
        <br />
        <span>
            <button>.</button>
            <button @ref=btn0 @onclick="@(()=>inputNum(@btn0))">0</button>
            <button class="btn btn-outline-primary">Clear</button>
            <button class="btn btn-primary" @onclick="IncrementCount">Enter</button>
        </span>
    </div>





</div>

@code {
    private int answer = 0;
    private ElementReference btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9, btn0, dec;
    private ElementReference plus, minus, add, subtract, clear, enter;

    private List<ElementReference> numberButtons;
    private List<ElementReference> operationButtons;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        numberButtons = new List<ElementReference>()
{
            btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9, btn0, dec
        };

        operationButtons = new List<ElementReference>()
{
            plus, minus, add, subtract, clear, enter
        };
    }

    [Parameter]
    public int IncrementAmount { get; set; } = 1;

    private void IncrementCount()
    {
        answer += IncrementAmount;
    }

    private async void inputNum(ElementReference element)
    {
        //Console.Write(element.GetType());
        answer = Convert.ToInt32(element);
        await JSRuntime.InvokeVoidAsync("setElementText", element);
    }

}



